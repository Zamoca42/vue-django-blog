name: Backend Deploy # action 명

on: # 이벤트 트리거
  push: # push event에 반응
    paths:
      - "backend/**" # backend의 변경이 있을 때
    branches: # github repository의 branch가 
      - main # main 일 경우만

jobs: 
 deploy: # GitHub-hosted runners env
    runs-on: ubuntu-latest # using Ubuntu

    defaults:
      run:
        working-directory: "backend" # backend 폴더에서 실행

    steps:
      - uses: actions/checkout@v3

      - name: Authenticate AWS CLI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_REGION

      - name: Create CodeDeploy Deployment
        run: |
          deploymend_id=$(aws deploy create-deployment \
            --application-name DjangoToEC2Deploy \
            --deployment-group-name autoDeployGroup \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --file-exists-behavior OVERWRITE \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}\
            --query "deploymentId" \
            --output text)
          echo "Deployment ID: $deployment_id"
          
            status=""
            while [ "$status" != "Succeeded" -a "$status" != "Failed" -a "$status" != "Stopped" ]
            do
              sleep 30
              status=$(aws deploy get-deployment \
                --deployment-id $deployment_id \
                --query "deploymentInfo.status" \
                --output text)
              echo "Deployment Status: $status"
            done
      
      # - name: Get CodeDeploy deployment status
      #   run: |
      #     deployment_id=$(aws deploy list-deployments --application-name DjangoToEC2Deploy --deployment-group-name autoDeployGroup --max-items 1 --query "deployments[0].deploymentId" --output text)
      #     status=$(aws deploy get-deployment --deployment-id $deployment_id --query "deploymentInfo.status" --output text)
      #     echo "Deployment status: $status"